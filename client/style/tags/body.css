body {
  font-size: var(--base-font-size);
  width: 100vw;
  background-color: var(--color-background);
  color: var(--color-text);
  font-family: var(--font-family);
}

body > :is(header, footer) {
  width: 100vw;
  position: fixed;
  background-color: var(--color-foreground);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-left: 16px;
  padding-right: 16px;
  font-size: 1.25rem;
}

body > :is(header, footer) nav {
  display: inline-flex;
  align-items: center;
  /* use "flex-end" instead of "end" for safari/iOS */
  justify-content: flex-end;
  flex: 1 0 auto;
  padding: 0;
  gap: 16px;
}

body > :is(header, footer) nav a {
  display: inline-block;
  padding: 16px 18px; /* for mobile touch target size */
}

body > :is(header, footer) > a {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 8px;
  font-size: 1rem;
}

body > :is(header, footer) a,
body > :is(header, footer) a:visited {
  color: var(--color-text);
}

body > :is(header, footer) a:hover,
body > :is(header, footer) a:active {
  color: var(--color-text-highlight);
}

body > :is(header, footer) > a > img {
  width: 32px;
}

body > header {
  height: var(--header-height);
  top: 0;
  z-index: 1;
  /*
  Fixing the positon of the header and footer
  gives them a stacking context (z-index: auto).
  Giving somthing else a stacking context --
  for example, by appling a filter
  (see here for more: https://stackoverflow.com/questions/16148007/which-css-properties-create-a-stacking-context/16148341#16148341)
    --
  would cause it to appear above the header.
  To solve this, we explicitly set the z-index
  of the header to 1. This is not necessary for
  the footer as it is placed after the content.
  */
}
body > footer {
  height: var(--footer-height);
  bottom: 0;
}

@media screen and (orientation: landscape) {
  body > :is(header, footer) {
    font-size: inherit;
  }
  body > :is(header, footer) nav {
    gap: 0;
  }
  body > :is(header, footer) > a > img {
    width: 16px;
    height: 16px;
  }
  body > header {
    height: calc(var(--header-height) / 2);
  }
  body > footer {
    height: calc(var(--footer-height) / 2);
  }
}

body > section {
  padding-top: var(--header-padding);
  padding-bottom: var(--header-padding);
  padding-left: var(--padding-side);
  padding-right: var(--padding-side);
}
body > section:first-of-type {
  padding-top: calc(var(--header-height) + var(--header-padding));
}

body > section:last-of-type {
  padding-bottom: calc(var(--footer-height) + var(--header-padding));
}
