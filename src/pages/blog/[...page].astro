---
// Settings
import {
  SITE_TITLE,
  SITE_KEYWORDS,
  SITE_DESCRIPTION,
  SITE_AUTHOR,
  SITE_CANONICAL_URL,
  SITE_BLOG_PAGE_SIZE} from "../../SETTINGS.mjs";
// Utilities
import sortPosts from "../../utils/sort-posts.mjs";
// Components
import JH from "../../components/jh/index.astro";
import BlogPreview from "../../components/BlogPreview.astro";
import SitePage from "../../components/SitePage.astro";
import Pagination from "../../components/Pagination.astro";
// Content
import headerLinks from "../../content/headerlinks.mjs";

const title = `${SITE_TITLE} -- Blog`;

const { page } = Astro.props;
// Misc.
export async function getStaticPaths({ paginate }) {
  const { sorted } =
        sortPosts(
          Astro
          .fetchContent('./posts/*.md'));
  return paginate(sorted, { pageSize: SITE_BLOG_PAGE_SIZE });
}
---
<SitePage
  title={`Blog -- #${page.currentPage}`}
  description={SITE_DESCRIPTION}
  keywords={SITE_KEYWORDS}
  author={SITE_AUTHOR}
  canonical={SITE_CANONICAL_URL}
  headerLinks ={headerLinks}>
  <section class="blog-top">
    <header><JH class="logo"/></header>
    <p>This is the place where I muse about technology.</p>
    <p>Page : {page.currentPage}</p>
  </section>
  {page.data.map(({date, url, title, description, heroImage, author, tags}) =>
  <BlogPreview
  url={url}
  date={date}
  title={title}
  heroImage={heroImage}
  description={description}
  author={author}
  tags={tags}
/>)}
  {page.lastPage > 1 ?
  <section class="blog-nav"><Pagination prefix="/blog/" page={page} /></section> : ''}
</SitePage>
